apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: "com.jfrog.bintray"

android {
  compileSdkVersion 23
  buildToolsVersion "27.0.3"

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 23
    versionCode 4
    versionName "0.1.1"
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
    debug {
      debuggable true
    }
  }
}

version "0.1.1"
//1066b170a3e0eba4853ba07e7f0836560e740d7f
dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  testImplementation 'junit:junit:4.12'
  implementation 'com.android.support:appcompat-v7:23.1.1'
}

def siteUrl = 'https://github.com/lovedise/PermissionGen'      // Homepage URL of the library
def gitUrl = 'https://github.com/lovedise/PermissionGen.git'   // Git repository URL

group = "com.lovedise"


install {
  repositories.mavenInstaller {
    // This generates POM.xml with proper parameters
    pom {
      project {
        packaging 'aar'

        // Add your description here
        name 'PermissionGen'
        description = 'The project PermissionGen easy to use permission of Android M'
        url siteUrl

        // Set your license
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id 'lovedise'
            name 'SeungHwan Kim'
            email 'lovedise@gmail.com'
          }
        }
        scm {
          connection gitUrl
          developerConnection gitUrl
          url siteUrl

        }
      }
    }
  }
}

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

afterEvaluate {
  javadoc.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir

}
artifacts {
  archives javadocJar
  archives sourcesJar
}



//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())

// https://github.com/bintray/gradle-bintray-plugin
bintray {
  user = "lovedise"
  key = "1066b170a3e0eba4853ba07e7f0836560e740d7f"
  publish = true
  configurations = ['archives']
  pkg {
    repo = "maven"
    // it is the name that appears in bintray when logged
    name = "PermissionGen"
    websiteUrl = siteUrl
    vcsUrl = gitUrl
    licenses = ["Apache-2.0"]
    publish = true
    publicDownloadNumbers = true

//    version {
//      name = ""
//      desc = ""
//      vcsTag = ""
//      gpg {
//        sign = true                                                 //Determines whether to GPG sign the files. The default is false
//        passphrase = properties.getProperty("bintray.gpgPassword")  //Optional. The passphrase for GPG signing'
//      }
//    }
  }


}
